<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.customer">
	<insert id="register" parameterType="customer"> 
		insert into CUSTOMER_TB values(
		#{customer_id},#{pass},
		#{phone_no},#{name},#{zipcode},#{customer_addr},#{address},#{email},now(),
		#{birth,jdbcType=DATE},#{ps_question},#{ps_answer},#{state} 
		)
	</insert>
	
	<update id="update" parameterType="customer">
		 update CUSTOMER_TB 
		 set pass = #{pass}, phone_no = #{phone_no},name = #{name},zipcode=#{zipcode},
		 customer_addr = #{customer_addr},address=#{address}, email = #{email},
		  birth = #{birth,jdbcType=DATE}, ps_question = #{ps_question}, ps_answer = #{ps_answer}, state = #{state} 
		 where customer_id = #{customer_id}
	 </update>
	 
	<!-- 마이페이지 -->
	<select id="read" resultType="customer" parameterType="String"> 
		select * from CUSTOMER_TB where customer_id = #{customer_id} 
	</select>
	
	<!-- 아이디 중복확인 -->
	<select id="idcheak" resultType="int" parameterType="String"> 
		select count(customer_id) from CUSTOMER_TB where customer_id = #{customer_id} 
	</select>
	
	<select id="list" resultType="customer"> 
		select * from CUSTOMER_TB where state != '관리자'
	</select>
	
	<update id="delete" parameterType="String"> 
		update CUSTOMER_TB set state = '탈퇴' where customer_id = #{customer_id} 
	</update>

	<select id="findbystate" parameterType="String" resultType="customer">
		select * from CUSTOMER_TB
		where state = #{state}
	</select>
	<select id="selectall" resultType="customer" parameterType="Map">
		select c.*
				from(select @ROWNUM:=@ROWNUM+1 rn, ct.*
				        FROM (select @rownum :=0) as r,(select * from CUSTOMER_TB where state !='관리자') ct where name like concat('%',#{name},'%')) as c
		<where>
			<if test='remainNo lte 10'>
				rn BETWEEN 1 AND #{remainNo} 
				
			</if>
			<if test='remainNo gt 10'>
				rn BETWEEN #{remainNo}-9 AND #{remainNo}
			</if>
		</where>
	</select>
	<select id="stateSelect" resultType="customer" parameterType="Map">
		select c.*
				from(select @ROWNUM:=@ROWNUM+1 rn, ct.*
				        FROM (select @rownum :=0) as r,(select * from CUSTOMER_TB where state= #{state}) ct where name like concat('%',#{name},'%')) as c
		<where>
			<if test='remainNo lte 10'>
				rn BETWEEN 1 AND #{remainNo} 
			</if>
			<if test='remainNo gt 10'>
				rn BETWEEN #{remainNo}-9 AND #{remainNo}
			</if>
		</where>
	</select>
	<select id="findbyname" parameterType="Map" resultType="customer">
		select * from CUSTOMER_TB 
		<where>
			<if test="state == 'all'">
				name like concat('%',#{name},'%')  
				and state != '관리자'
			</if>
			<if test="state == '정상'">
				state = '정상' and name like concat('%',#{name},'%') 
			</if>
			<if test="state == '불러오지마'">
				state = '불러오지마'  
			</if>
		</where>
	</select>
	<update id="change" parameterType="String"> 
		update CUSTOMER_TB set state = '관리자' where customer_id = #{customer_id} 
	</update>
	<delete id="realdelete">
		delete from CUSTOMER_TB
		where customer_id = #{customer_id}
	</delete>
	
	
	<!-- ==========================카카오로그인========================= -->
	<insert id="kakaoInsert" parameterType="customer"> 
		insert into CUSTOMER_TB values(
		#{customer_id}, '정보없음',
		'정보없음', '정보없음', '정보없음', '정보없음', '정보없음', #{email}, now(),
		str_to_date('11111111','%Y%m%d'), '정보없음', '정보없음', '카카오')
	</insert>
	
	<insert id="kakaoInsertNull" parameterType="customer"> 
		insert into CUSTOMER_TB values(
		#{customer_id}, '정보없음',
		'정보없음', '정보없음', '정보없음', '정보없음', '정보없음', '정보없음', now(),
		str_to_date('11111111','%Y%m%d'), '정보없음', '정보없음', '카카오')
	</insert>
	
	<select id="findkakao" parameterType="customer" resultType="customer">
		select * from CUSTOMER_TB where customer_id = #{customer_id}
	</select>
</mapper>




